[{"C:\\Users\\user\\Documents\\GitHub\\test-deploy\\src\\index.js":"1","C:\\Users\\user\\Documents\\GitHub\\test-deploy\\src\\App.js":"2","C:\\Users\\user\\Documents\\GitHub\\test-deploy\\src\\components\\Pagination.js":"3","C:\\Users\\user\\Documents\\GitHub\\test-deploy\\src\\components\\Pages.js":"4"},{"size":269,"mtime":1676105275874,"results":"5","hashOfConfig":"6"},{"size":1404,"mtime":1676105275871,"results":"7","hashOfConfig":"6"},{"size":709,"mtime":1676105275872,"results":"8","hashOfConfig":"6"},{"size":461,"mtime":1676105275872,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mwcyfo",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"C:\\Users\\user\\Documents\\GitHub\\test-deploy\\src\\index.js",[],[],"C:\\Users\\user\\Documents\\GitHub\\test-deploy\\src\\App.js",[],[],"C:\\Users\\user\\Documents\\GitHub\\test-deploy\\src\\components\\Pagination.js",["24"],[],"import React from \"react\";\r\nimport \"../components/style.css\";\r\nconst Pagination = ({ countElement, totalCountElement, paginationPoint }) => {\r\n  const pageNumber = [];\r\n\r\n  for (let i = 1; i <= Math.ceil(totalCountElement / countElement); i++) {\r\n    pageNumber.push(i);\r\n  }\r\n  return (\r\n    <div className=\"paginationBox\">\r\n      <ul className=\"paginationList\">\r\n        {pageNumber.map((number) => {\r\n          return (\r\n            <li className=\"paginationListItem\" key={number}>\r\n              <a href=\"#\" onClick={() => paginationPoint(number)}>\r\n                {number}\r\n              </a>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;","C:\\Users\\user\\Documents\\GitHub\\test-deploy\\src\\components\\Pages.js",["25"],[],"import React from \"react\";\r\nimport \"../components/style.css\";\r\n\r\nconst Pages = ({ photos, loading }) => {\r\n  return (\r\n    <ul className=\"pagesList\">\r\n      {photos.map((photo, i) => {\r\n        return (\r\n          <li className=\"pagesListItem\">\r\n            {photo.id}.<span></span>\r\n            <li></li>\r\n            {photo.title}\r\n            <img src={photo.url}></img>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Pages;\r\n",{"ruleId":"26","severity":1,"message":"27","line":15,"column":15,"nodeType":"28","endLine":15,"endColumn":67},{"ruleId":"29","severity":1,"message":"30","line":13,"column":13,"nodeType":"28","endLine":13,"endColumn":34},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images."]